{"version":3,"sources":["components/Header.js","components/Footer.js","components/Image.js","components/Main.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","Image","props","src","picture","alt","type","onClick","click","loading","Main","url","api","option","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_handleRes","App","React","useState","randomImage","setRandomImage","setLoading","isLoading","isLoad","getImages","Math","floor","random","length","catch","err","alert","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAQeA,MARf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACI,oBAAIA,UAAU,gBAAd,+BCKGC,MARf,WACI,OACI,wBAAQD,UAAU,SAAlB,SACI,oBAAIA,UAAU,gBAAd,+CCKGE,MARf,SAAeC,GACX,OACI,sBAAKH,UAAU,kBAAf,UACI,qBAAKI,IAAKD,EAAME,QAASC,IAAI,GAAGN,UAAU,qBAC1C,wBAAQO,KAAK,SAASP,UAAU,oBAAoBQ,QAASL,EAAMM,MAAnE,SAA2EN,EAAMO,cCO9EC,MATf,SAAcR,GAEV,OACI,yBAASH,UAAU,YAAnB,SACI,cAAC,EAAD,CAAOK,QAASF,EAAMS,IAAKH,MAAON,EAAMM,MAAOC,QAASP,EAAMO,a,cCqB3DG,EAPH,I,WAnBR,WAAYC,GAAS,oBACjBC,KAAKC,SAAWF,EAAOG,QACvBF,KAAKG,SAAWJ,EAAOK,Q,8CAG3B,SAAWC,GACP,OAAOA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,uBAG/D,WAAa,IAAD,OACR,OAAOC,MAAM,GAAD,OAAIX,KAAKC,UAAY,CAC7BG,QAASJ,KAAKG,WAEbS,MAAK,SAACP,GACH,OAAO,EAAKQ,WAAWR,U,KAK3B,CAAQ,CAChBH,QAAS,kCACTE,QAAS,CACL,eAAgB,sBCoBTU,MArCf,WACI,MAAsCC,IAAMC,SAAS,CAAC,wEAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BH,IAAMC,SAAN,2DAA9B,mBAAOrB,EAAP,KAAgBwB,EAAhB,KACA,SAASC,EAAUC,GACfF,GAAsB,IAAXE,EAAA,uHAkBjB,OACI,mCACE,sBAAKpC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACIY,IAAKoB,EACLvB,MArBZ,WACI0B,GAAU,GACVtB,EAAIwB,YACCV,MAAK,SAACP,GACHa,EAAeb,EAAIkB,KAAKC,MAAMD,KAAKE,SAAWpB,EAAIqB,SAAS7B,QAE9D8B,OAAM,SAACC,GACJC,MAAM,0FAAD,OAAqBD,OAE7BE,SAAQ,WACLV,GAAU,OAYVzB,QAASA,IAEb,cAAC,EAAD,UCzBGoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1b912983.chunk.js","sourcesContent":["function Header() {\r\n    return(\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Meme generator</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","function Footer() {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <h2 className=\"footer__title\">Created by Alexey Kazakov 2021</h2>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","function Image(props) {\r\n    return (\r\n        <div className=\"generator__card\">\r\n            <img src={props.picture} alt=\"\" className=\"generator__image\"/>\r\n            <button type=\"button\" className=\"generator__button\" onClick={props.click}>{props.loading}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Image","import Image from \"./Image\";\r\n\r\nfunction Main(props) {\r\n\r\n    return(\r\n        <section className=\"generator\">\r\n            <Image picture={props.url} click={props.click} loading={props.loading}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main","class Api {\r\n    constructor(option) {\r\n        this._baseUrl = option.baseUrl\r\n        this._headers = option.headers\r\n    }\r\n\r\n    _handleRes(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getImages() {\r\n        return fetch(`${this._baseUrl}`, {\r\n            headers: this._headers\r\n        })\r\n            .then((res) => {\r\n                return this._handleRes(res)\r\n            })\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://api.memegen.link/images',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api","import Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport React from \"react\";\nimport api from \"../utils/api\";\n\nfunction App() {\n    const [randomImage, setRandomImage] = React.useState(['https://99px.ru/sstorage/86/2019/09/image_862209192214338119696.gif'])\n    const [loading, setLoading] = React.useState(`Нажми меня`)\n    function isLoading(isLoad) {\n        setLoading(isLoad === true ? `Подождите...` : `Нажми меня`)\n    }\n\n    function newImage() {\n        isLoading(true)\n        api.getImages()\n            .then((res) => {\n                setRandomImage(res[Math.floor(Math.random() * res.length)].url)\n            })\n            .catch((err) => {\n                alert(`Ошибка загрузки: ${err}`)\n            })\n            .finally(() => {\n                isLoading(false)\n            })\n    }\n\n\n  return (\n      <>\n        <div className=\"page\">\n            <Header/>\n            <Main\n                url={randomImage}\n                click={newImage}\n                loading={loading}\n            />\n            <Footer/>\n        </div>\n      </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}